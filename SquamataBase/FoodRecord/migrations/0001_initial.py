# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-09 16:22
from __future__ import unicode_literals

import SquamataBase.FoodRecord.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Bibliography', '0001_initial'),
        ('Glossary', '0001_initial'),
        ('Geography', '0001_initial'),
        ('MuseumCatalog', '0001_initial'),
        ('Taxonomy', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='IndividualSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxon', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Taxonomy.Taxon')),
                ('verbatim_name', models.CharField(max_length=255)),
                ('ambiguous', models.BooleanField()),
                ('count', models.IntegerField(blank=True, null=True)),
                ('mass', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('mass_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='individualset_massunitset', to='Glossary.OntologyTerm')),
                ('volume', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('volume_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='individualset_volumeunitset', to='Glossary.OntologyTerm')),
                ('lifestage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='individualset_lifestageset', to='Glossary.OntologyTerm')),
                ('sex', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='individualset_sexset', to='Glossary.OntologyTerm')),
                ('component_part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='individualset_componentset', to='Glossary.OntologyTerm')),
            ],
            options={
                'db_table': 'sb_individual_set',
            },
        ),
        migrations.CreateModel(
            name='IndividualSetIntersection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('individual_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='individualsetintersection_childset', to='FoodRecord.IndividualSet')),
                ('intersects_with', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='individualsetintersection_parentset', to='FoodRecord.IndividualSet')),
            ],
            options={
                'verbose_name': 'intersection',
                'db_table': 'sb_individual_set_intersection',
            },
        ),
        migrations.CreateModel(
            name='IndividualSetMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('individual_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FoodRecord.IndividualSet')),
                ('measurement_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='individualsetmeasurement_measurementtypeset', to='Glossary.OntologyTerm')),
                ('measurement_value', models.DecimalField(decimal_places=3, max_digits=10)),
                ('measurement_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='individualsetmeasurement_measurementunitset', to='Glossary.OntologyTerm')),
                ('verbatim_value', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'measurement',
                'db_table': 'sb_individual_set_measurement',
            },
        ),
        migrations.CreateModel(
            name='IndividualSetVoucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('individual_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FoodRecord.IndividualSet')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='MuseumCatalog.Voucher')),
            ],
            options={
                'verbose_name': 'voucher',
                'db_table': 'sb_individual_set_voucher',
            },
        ),
        migrations.CreateModel(
            name='FoodRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Bibliography.Ref')),
                ('predator', models.ForeignKey(help_text='search on id, latin name, or voucher code', on_delete=django.db.models.deletion.PROTECT, related_name='foodrecord_predatorset', to='FoodRecord.IndividualSet')),
                ('prey', models.ForeignKey(help_text='search on id, latin name, or voucher code', on_delete=django.db.models.deletion.PROTECT, related_name='foodrecord_preyset', to='FoodRecord.IndividualSet')),
                ('basis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='foodrecord_evidenceset', to='Glossary.OntologyTerm')),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='foodrecord_contextset', to='Glossary.OntologyTerm')),
                ('conditions', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='foodrecord_conditionset', to='Glossary.OntologyTerm')),
                ('outcome', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='foodrecord_outcomeset', to='Glossary.OntologyTerm')),
                ('ingestion_direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foodrecord_ingestedset', to='Glossary.OntologyTerm')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='foodrecord_localityset', to='Geography.Locality')),                
                ('event_date', models.CharField(blank=True, max_length=255, null=True, validators=[SquamataBase.FoodRecord.validators.validate_date])),
                ('start_time', models.CharField(blank=True, max_length=255, null=True, validators=[SquamataBase.FoodRecord.validators.validate_time])),
                ('end_time', models.CharField(blank=True, max_length=255, null=True, validators=[SquamataBase.FoodRecord.validators.validate_time])),
                ('habitat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='foodrecord_habitatset', to='Glossary.OntologyTerm')),
                ('verbatim_habitat', models.CharField(blank=True, max_length=255, null=True)),
                ('prey_capture_mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='foodrecord_preycaptureset', to='Glossary.OntologyTerm')),
                ('prey_handle_mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='foodrecord_preyhandleset', to='Glossary.OntologyTerm')),
                ('remark', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sb_foodrecord',
            },
        ),
        migrations.CreateModel(
            name='FoodRecordMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filepath', models.CharField(max_length=255)),
                ('foodrecord', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FoodRecord.FoodRecord')),
            ],
            options={
                'db_table': 'sb_foodrecord_media',
            },
        ),
        migrations.CreateModel(
            name='DataSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Bibliography.Ref')),
                ('n_predators_examined', models.IntegerField(blank=True, help_text='number of predators examined for prey', null=True)),
                ('n_predators_ate', models.IntegerField(blank=True, help_text='number of predators containing prey', null=True)),
                ('n_prey_eaten', models.IntegerField(blank=True, help_text='number of prey items recovered', null=True)),
                ('mass_prey_eaten', models.DecimalField(blank=True, decimal_places=3, help_text='total biomass of prey items recovered', max_digits=10, null=True)),
                ('mass_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dataset_massunitset', to='Glossary.OntologyTerm')),
                ('volume_prey_eaten', models.DecimalField(blank=True, decimal_places=3, help_text='total volume of prey items recovered', max_digits=10, null=True)),
                ('volume_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dataset_volumeunitset', to='Glossary.OntologyTerm')),
                ('start_date', models.CharField(blank=True, max_length=255, null=True, validators=[SquamataBase.FoodRecord.validators.validate_date])),
                ('end_date', models.CharField(blank=True, max_length=255, null=True, validators=[SquamataBase.FoodRecord.validators.validate_date])),
            ],
            options={
                'db_table': 'sb_dataset',
            },
        ),
        migrations.CreateModel(
            name='DataSetFoodRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FoodRecord.DataSet')),
                ('foodrecord', models.ForeignKey(help_text='search on latin name of predator or prey', on_delete=django.db.models.deletion.PROTECT, to='FoodRecord.FoodRecord')),
            ],
            options={
                'db_table': 'sb_dataset_foodrecord',
            },
        ),
        migrations.CreateModel(
            name='DataSetLocality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FoodRecord.DataSet')),
                ('locality', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Geography.Locality')),
            ],
            options={
                'verbose_name_plural': 'data set localities',
                'db_table': 'sb_dataset_locality',
            },
        ),
        migrations.CreateModel(
            name='DataSetMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FoodRecord.DataSet')),
                ('basis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Glossary.OntologyTerm')),
            ],
            options={
                'db_table': 'sb_dataset_method',
            },
        ),
    ]
